@using SARCEM_TCC.web.Models
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Estoque e Consumo";
}

<div style="float:left">
<h2>@ViewBag.Title</h2>
<h4>Listagem completa dos Materiais com saldo em estoque.</h4>
<h6>Informação atualizada em @ViewBag.data</h6>

</div>


<div style="float:right;margin-top: 2%;padding-right: 2%;">

    <h5 id="headerEmpresa"> <span id="spanEmpresa"></span></h5>


</div>

@{
    string dropdow = "";

    if (User.IsInRole(RoleName.Brazil))
    {
        dropdow = "_DropDownsBrazil";
    }
    else
    {

        dropdow = "_DropDowns";
    }


}
<div class="row">



    <div id="DropDownsContainer" style="margin-top:1%">

        @Html.Partial(dropdow)

    </div>
</div>




<div id="RadioContainer">
    <div style="margin-top: 2%;">
        @Html.Partial("_RadiosB")
    </div>
</div>

<div style="margin-top: 2%;">



    <div class="pull-right">
        <button id="btn_exporta" class="btn btn-default xlsx">Exporte para Excel</button>
    </div>
</div>






<div class="col-lg-12" style="margin-top:2%;">

    <style>
        th {
            text-align: center;
        }

        .DTFC_LeftBodyLiner {
            top: -12px !important;
        }
    </style>
    <div id="divEstoqueConsumo">
    </div>


</div>

@section scripts
{
    <script>



        var cabecalho
        var dto
        var tipoRetorno
        var brazil

        var data

        data = new Date();
        AnoAtual = data.getFullYear();





        function CarregaCabecalho() {

            var imgm = $('#imagemLoad')[0]
            imgm.style.display = ""

            dto = {
                Empresa: $('#listaEmpresa').val(),
                Gestor: $('#listaGestor').val(),
                Familia: $('#listaFamilia').val(),
                Material: $('#listaMaterial').val(),
                Centro: $('#listaCentro').val(),


            }

            tipoRetorno = $('input[name=listagem]:checked')[0].defaultValue


            cabecalho = '';
            cabecalho = new Array();

            $.ajax({
                type: 'GET',
                data: {
                    dto

                },
                url: '/api/EstoqueConsumoAtuais/TrazDropDown',
                dataSrc: "",
                success: function (d) {

                    cabecalho = d;
                    CriaDropDowm(cabecalho);

                },
                datatype: 'json'

            });


        }



        function CriaDropDowm(cabecalho) {
            if (cabecalho.empresas.length === 1)
                $('#spanEmpresa')[0].textContent = cabecalho.empresas[0]
            else
                $('#spanEmpresa')[0].textContent = ""


                $('#listaEmpresa').html('');

                if (dto.Empresa === '') {
                    $('#listaEmpresa').append("<option value=''></option>");
                    cabecalho.empresas.forEach(function (e) {
                        $('#listaEmpresa').append("<option value='" + e + "'>" + e + "</option>");
                    });

                } else {
                    $('#listaEmpresa').append("<option value='" + dto.Empresa + "' selected>" + dto.Empresa + "</option>");
                    $('#listaEmpresa').append("<option value='' ></option>");

                }




            $('#listaCentro').html('');

            if (dto.Centro === '') {
                $('#listaCentro').append("<option value=''></option>");
                cabecalho.centros.forEach(function (e) {
                    $('#listaCentro').append("<option value='" + e + "'>" + e + "</option>");

                });
            } else {
                $('#listaCentro').append("<option value='" + dto.Centro + "' selected>" + dto.Centro + "</option>");
                $('#listaCentro').append("<option value=''></option>");
            }





            $('#listaMaterial').html('');
            if (dto.Material === '') {
                $('#listaMaterial').append("<option value=''></option>");
                cabecalho.materiais.forEach(function (e) {
                    $('#listaMaterial').append("<option value='" + e + "'>" + e + "</option>");
                });
            } else {
                $('#listaMaterial').append("<option value='" + dto.Material + "'selected>" + dto.Material + "</option>");
                $('#listaMaterial').append("<option value=''></option>");
            }


            $('#listaFamilia').html('');
            if (dto.Familia === '') {
                $('#listaFamilia').append("<option value=''></option>");
                cabecalho.familias.forEach(function (e) {
                    $('#listaFamilia').append("<option value='" + e + "'>" + e + "</option>");
                });
            } else {
                $('#listaFamilia').append("<option value='" + dto.Familia + "'selected>" + dto.Familia + "</option>");
                $('#listaFamilia').append("<option value=''></option>");
            }

            $('#listaGestor').html('');
            if (dto.Gestor === '') {
                $('#listaGestor').append("<option value=''></option>");
                cabecalho.gestores.forEach(function (e) {
                    $('#listaGestor').append("<option value='" + e + "'>" + e + "</option>");
                });
            } else {
                $('#listaGestor').append("<option value='" + dto.Gestor + "' selected>" + dto.Gestor + "</option>");
                $('#listaGestor').append("<option value=''></option>");
            }




            $('#listaEmpresa').select2({
                theme: "classic",
                placeholder: "Selecione a Empresa",
                language: "pt-BR",
                allowClear: true
            });


            $('#listaCentro').select2({
                theme: "classic",
                placeholder: "Selecione o Centro",
                language: "pt-BR",
                allowClear: true
            });


            $('#listaMaterial').select2({
                theme: "classic",
                placeholder: "Selecione o Material",
                language: "pt-BR",
                allowClear: true
            });

            $('#listaFamilia').select2({
                theme: "classic",
                placeholder: "Selecione a Família",
                language: "pt-BR",
                allowClear: true
            });

            $('#listaGestor').select2({
                theme: "classic",
                placeholder: "Selecione o Gestor",
                language: "pt-BR",
                allowClear: true
            });


            var estilo = $('.select2');

            for (var i = 0; i < estilo.length; i++) {
                estilo[i].style.width = '100%';
            }

            criaTabela();

        }

        function criaTabela() {




            var sb = $('#divEstoqueConsumo')




            sb.html('');

            switch (tipoRetorno) {

                case 'porCentro':
                    {

                        sb.append("<table id='tabelaEstoqueConsumo' class='table table- striped text- nowrap table- hover'>" +
                            "<thead> <tr>" +

                            " <th>Empresa</th> " +
                            " <th>Centro Logístico</th> " +
                            " <th>Material</th>" +
                            "<th>Descrição do Material</th>" +
                            "<th>Unidade de Medida</th>" +
                            "<th>Classe</th>" +
                            "<th>classificacao</th>" +
                            "<th>Família</th>" +
                            "<th>MG Code</th>" +
                            "<th>Descricao do MG Code</th>" +
                            "<th>Gestor</th>" +
                            "<th>Estoque Sap Qtde</th>" +
                            "<th>Estoque Sap Valor</th>" +
                            "<th>Estoque Físico Qtde</th>" +
                            "<th>Estoque Físico Valor</th>" +
                            "<th>Adm Qtde</th>" +
                            "<th>Adm Valor</th>" +
                            "<th>Consumo Qtde</th>" +
                            "<th>Consumo Valor</th>" +
                            "<th>Entrada Qtde</th>" +
                            "<th>Entrada Valor</th>" +
                            "<th>Tipo de Centro</th>" +
                            //"<th>Data da Informação</th>" +

                            "   <th>Material Bloqueado</th> " +
                            "   <th>Material Substituido</th> " +




                            " </tr> </thead>" +
                            "<tbody> </tbody> </table >");



                        tabela = $("#tabelaEstoqueConsumo").DataTable({

                            ajax: {
                                type: 'GET',
                                data: {
                                    dto,
                                    tipoC: tipoRetorno,


                                },
                                url: '/api/EstoqueConsumoAtuais/ListaEstoqueConsumo',
                                dataSrc: "",
                            },
                            columns: [

                                { data: "empresaNome" },
                                { data: "centroLogisticoCodSap" },
                                { data: "materialCodSap" },
                                { data: "materialDescricao" },
                                { data: "materialUM" },
                                { data: "materialClasse" },
                                { data: "classificacaoNome" },
                                { data: "familiaNome" },
                                { data: "mGCodeCodigoSap" },
                                { data: "mGCodeDescricao" },
                                { data: "userName" },


                                { data: "sapQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "sapValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "fisicoQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "fisicoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "admQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "admValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "consumoQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "consumoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "entradaQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "entradaValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },

                                { data: "tipoDoCentro" },
                                //{
                                //    data: "dataLanc",
                                //    render:
                                //    function (data, type, row) {
                                //        return (data.substring(0, 10));
                                //    }
                                //},

                                {
                                    data: "materialBloqueado",
                                    render: function (data, type, material, td) {

                                        if (material.materialBloqueado) {

                                            return "x";
                                        }


                                        return null;


                                    }
                                },
                                { data: "materialSubstituto" },




                            ],

                            "scrollX": true,
                            "scrollY": "360px",

                            "scrollCollapse": true,
                            "deferRender": true,
                            "fixedColumns": {
                                leftColumns: 3,
                            }, "createdRow": function (row, data, dataIndex) {
                                if (data.materialBloqueado != false) {
                                    $(row).addClass('red');

                                }


                            }

                        });

                        break;

                    }


                case 'porLote':
                    {

                        sb.append("<table id='tabelaEstoqueConsumo' class='table table- striped text- nowrap table- hover'>" +
                            "<thead> <tr>" +

                            " <th>Empresa</th> " +
                            " <th>Centro Logístico</th> " +
                            " <th>Avaliação </th>" +
                            " <th>Material</th>" +
                            "<th>Descrição do Material</th>" +
                            "<th>Unidade de Medida</th>" +
                            "<th>Classe</th>" +
                            "<th>classificacao</th>" +
                            "<th>Família</th>" +
                            "<th>MG Code</th>" +
                            "<th>Descricao do MG Code</th>" +
                            "<th>Gestor</th>" +
                            "<th>Estoque Sap Qtde</th>" +
                            "<th>Estoque Sap Valor</th>" +
                            "<th>Estoque Físico Qtde</th>" +
                            "<th>Estoque Físico Valor</th>" +
                            "<th>Adm Qtde</th>" +
                            "<th>Adm Valor</th>" +
                            "<th>Consumo Qtde</th>" +
                            "<th>Consumo Valor</th>" +
                            "<th>Entrada Qtde</th>" +
                            "<th>Entrada Valor</th>" +
                            "<th>Tipo de Centro</th>" +
                            //"<th>Data da Informação</th>" +


                            "   <th>Material Bloqueado</th> " +
                            "   <th>Material Substituido</th> " +



                            " </tr> </thead>" +
                            "<tbody> </tbody> </table >");



                        tabela = $("#tabelaEstoqueConsumo").DataTable({

                            ajax: {
                                type: 'GET',
                                data: {
                                    dto,
                                    tipoC: tipoRetorno,


                                },
                                url: '/api/EstoqueConsumoAtuais/ListaEstoqueConsumo',
                                dataSrc: "",
                            },
                            columns: [

                                { data: "empresaNome" },
                                { data: "centroLogisticoCodSap" },
                                { data: "lote" },
                                { data: "materialCodSap" },
                                { data: "materialDescricao" },
                                { data: "materialUM" },
                                { data: "materialClasse" },
                                { data: "classificacaoNome" },
                                { data: "familiaNome" },
                                { data: "mGCodeCodigoSap" },
                                { data: "mGCodeDescricao" },
                                { data: "userName" },


                                { data: "sapQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "sapValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "fisicoQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "fisicoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "admQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "admValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "consumoQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "consumoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "entradaQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "entradaValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },

                                { data: "tipoDoCentro" },
                                //{
                                //    data: "dataLanc",
                                //    render:
                                //    function (data, type, row) {
                                //        return (data.substring(0, 10));
                                //    }
                                //},


                                {
                                    data: "materialBloqueado",
                                    render: function (data, type, material, td) {

                                        if (material.materialBloqueado) {

                                            return "x";
                                        }


                                        return null;


                                    }
                                },
                                { data: "materialSubstituto" },



                            ],

                            "scrollX": true,
                            "scrollY": "360px",

                            "scrollCollapse": true,
                            "deferRender": true,
                            "fixedColumns": {
                                leftColumns: 4,
                            }, "createdRow": function (row, data, dataIndex) {
                                if (data.materialBloqueado != false) {
                                    $(row).addClass('red');

                                }


                            }

                        });

                        break;

                    }


                case 'porResumo':
                    {
                        sb.append("<table id='tabelaEstoqueConsumo' class='table table- striped text- nowrap table- hover'>" +
                            "<thead> <tr>" +


                            "<th>Tipo do Centro </th>" +
                            "<th>Estoque Sap </th>" +
                            "<th>Estoque Físico </th>" +
                            "<th>Administrativo</th>" +
                            "<th>Consumo </th>" +
                            "<th>Entrada </th>" +
                            " </tr> </thead>" +
                            "<tbody> </tbody> </table >");



                        tabela = $("#tabelaEstoqueConsumo").DataTable({

                            ajax: {
                                type: 'GET',
                                data: {
                                    dto,
                                    tipoC: tipoRetorno,


                                },
                                url: '/api/EstoqueConsumoAtuais/ListaEstoqueConsumo',

                                dataSrc: "",
                            },
                            columns: [


                                { data: "tipoDoCentro" },
                                { data: "sapValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "fisicoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "admValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "consumoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "entradaValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },

                            ],

                            "scrollX": false,
                            "scrollY": "160px",
                            "paging": false,
                            "searching": false,
                            "scrollCollapse": true,
                            "deferRender": true,

                        });

                        break;
                    }

                default:
                    {



                        sb.append("<table id='tabelaEstoqueConsumo' class='table table- striped text- nowrap table- hover'>" +
                            "<thead> <tr>" +

                            " <th>Empresa</th> " +
                            " <th>Material</th>" +
                            "<th>Descrição do Material</th>" +
                            "<th>Unidade de Medida</th>" +
                            "<th>Classe</th>" +
                            "<th>classificacao</th>" +
                            "<th>Família</th>" +
                            "<th>MG Code</th>" +
                            "<th>Descricao do MG Code</th>" +
                            "<th>Gestor</th>" +
                            "<th>Estoque Sap Qtde</th>" +
                            "<th>Estoque Sap Valor</th>" +
                            "<th>Estoque Físico Qtde</th>" +
                            "<th>Estoque Físico Valor</th>" +
                            "<th>Adm Qtde</th>" +
                            "<th>Adm Valor</th>" +
                            "<th>Consumo Qtde</th>" +
                            "<th>Consumo Valor</th>" +
                            "<th>Entrada Qtde</th>" +
                            "<th>Entrada Valor</th>" +

                            //"<th>Data da Informação</th>" +


                            "   <th>Material Bloqueado</th> " +
                            "   <th>Material Substituido</th> " +


                            " </tr> </thead>" +
                            "<tbody> </tbody> </table >");



                        tabela = $("#tabelaEstoqueConsumo").DataTable({

                            ajax: {
                                type: 'GET',
                                data: {
                                    dto,
                                    tipoC: tipoRetorno,


                                },
                                url: '/api/EstoqueConsumoAtuais/ListaEstoqueConsumo',
                                dataSrc: "",
                            },
                            columns: [

                                { data: "empresaNome" },
                                { data: "materialCodSap" },
                                { data: "materialDescricao" },
                                { data: "materialUM" },
                                { data: "materialClasse" },
                                { data: "classificacaoNome" },
                                { data: "familiaNome" },
                                { data: "mGCodeCodigoSap" },
                                { data: "mGCodeDescricao" },
                                { data: "userName" },
                                { data: "sapQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "sapValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "fisicoQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "fisicoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "admQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "admValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "consumoQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "consumoValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                { data: "entradaQtde", render: $.fn.dataTable.render.number('.', ',', 2) },
                                { data: "entradaValor", render: $.fn.dataTable.render.number('.', ',', 2, 'R$ ') },
                                //{ data: "dataLanc",
                                //    render:
                                //    function (data, type, row) {
                                //    return (data.substring(0,10));
                                //    }
                                //},
                                {
                                    data: "materialBloqueado",
                                    render: function (data, type, material, td) {

                                        if (material.materialBloqueado) {

                                            return "x";
                                        }


                                        return null;


                                    }
                                },
                                { data: "materialSubstituto" },

                            ],

                            "scrollX": true,
                            "scrollY": "360px",

                            "scrollCollapse": true,
                            "deferRender": true,
                            "fixedColumns": {
                                leftColumns: 2,
                            }, "createdRow": function (row, data, dataIndex) {
                                if (data.materialBloqueado != false) {
                                    $(row).addClass('red');

                                }


                            }

                        });

                        break;
                    }
            }
            var imgm = $('#imagemLoad')[0]
            imgm.style.display = "none"
        }

        function ExportaPagina(result) {
            table = '';

            dataRst = '';



            dataRst = new Array();


            var i = 1;


            switch (tipoRetorno) {


                case 'porCentro':
                    {

                        dataRst[0] = [
                            { v: 'Empresa', t: 's' },
                            { v: 'Centro Logístico', t: 's' },

                            { v: 'Material', t: 's' },
                            { v: 'Descrição do Material', t: 's' },
                            { v: 'Unidade de Medida', t: 's' },
                            { v: 'Classe', t: 's' },
                            { v: 'classificacao', t: 's' },
                            { v: 'Família', t: 's' },
                            { v: 'MG Code', t: 's' },
                            { v: 'Descricao do MG Code', t: 's' },
                            { v: 'Gestor', t: 's' },
                            { v: 'Estoque Sap Qtde', t: 's' },
                            { v: 'Estoque Sap Valor', t: 's' },
                            { v: 'Estoque Físico Qtde', t: 's' },
                            { v: 'Estoque Físico Valor', t: 's' },
                            { v: 'Adm Qtde', t: 's' },
                            { v: 'Adm Valor', t: 's' },
                            { v: 'Consumo Qtde', t: 's' },
                            { v: 'Consumo Valor', t: 's' },
                            { v: 'Entrada Qtde', t: 's' },
                            { v: 'Entrada Valor', t: 's' },
                            { v: 'Tipo do Centro', t: 's' },
                            { v: 'Data da Informação', t: 's' },
                            { v: 'Material Bloqueado', t: 's' },
                            { v: 'Material Substituido', t: 's' },


                        ];

                        result.forEach(function (r) {

                            dataRst[i] = [
                                { v: r.empresaNome, t: 's' },
                                { v: r.centroLogisticoCodSap, t: 's' },
                                { v: r.materialCodSap, t: 's' },
                                { v: r.materialDescricao, t: 's' },
                                { v: r.materialUM, t: 's' },
                                { v: r.materialClasse, t: 's' },
                                { v: r.classificacaoNome, t: 's' },
                                { v: r.familiaNome, t: 's' },
                                { v: r.mGCodeCodigoSap, t: 's' },
                                { v: r.mGCodeDescricao, t: 's' },
                                { v: r.userName, t: 's' },
                                { v: r.sapQtde, t: 'n' },
                                { v: r.sapValor, t: 'n' },
                                { v: r.fisicoQtde, t: 'n' },
                                { v: r.fisicoValor, t: 'n' },
                                { v: r.admQtde, t: 'n' },
                                { v: r.admValor, t: 'n' },
                                { v: r.consumoQtde, t: 'n' },
                                { v: r.consumoValor, t: 'n' },
                                { v: r.entradaQtde, t: 'n' },
                                { v: r.entradaValor, t: 'n' },
                                { v: r.tipoDoCentro, t: 's' },
                                { v: r.dataLanc, t: 'd' },
                                { v: r.materialBloqueado, t: 's' },
                                { v: r.materialSubstituto, t: 's' },

                            ]
                            i++;
                        });

                        break;

                    }


                case 'porLote':
                    {
                        dataRst[0] = [
                            { v: 'Empresa', t: 's' },
                            { v: 'Centro Logístico', t: 's' },
                            { v: 'Lote', t: 's' },
                            { v: 'Material', t: 's' },
                            { v: 'Descrição do Material', t: 's' },
                            { v: 'Unidade de Medida', t: 's' },
                            { v: 'Classe', t: 's' },
                            { v: 'classificacao', t: 's' },
                            { v: 'Família', t: 's' },
                            { v: 'MG Code', t: 's' },
                            { v: 'Descricao do MG Code', t: 's' },
                            { v: 'Gestor', t: 's' },
                            { v: 'Estoque Sap Qtde', t: 's' },
                            { v: 'Estoque Sap Valor', t: 's' },
                            { v: 'Estoque Físico Qtde', t: 's' },
                            { v: 'Estoque Físico Valor', t: 's' },
                            { v: 'Adm Qtde', t: 's' },
                            { v: 'Adm Valor', t: 's' },
                            { v: 'Consumo Qtde', t: 's' },
                            { v: 'Consumo Valor', t: 's' },
                            { v: 'Entrada Qtde', t: 's' },
                            { v: 'Entrada Valor', t: 's' },
                            { v: 'Tipo do Centro', t: 's' },
                            { v: 'Data da Informação', t: 's' },
                            { v: 'Material Bloqueado', t: 's' },
                            { v: 'Material Substituido', t: 's' },


                        ];

                        result.forEach(function (r) {

                            dataRst[i] = [
                                { v: r.empresaNome, t: 's' },
                                { v: r.centroLogisticoCodSap, t: 's' },
                                { v: r.lote, t: 's' },
                                { v: r.materialCodSap, t: 's' },
                                { v: r.materialDescricao, t: 's' },
                                { v: r.materialUM, t: 's' },
                                { v: r.materialClasse, t: 's' },
                                { v: r.classificacaoNome, t: 's' },
                                { v: r.familiaNome, t: 's' },
                                { v: r.mGCodeCodigoSap, t: 's' },
                                { v: r.mGCodeDescricao, t: 's' },
                                { v: r.userName, t: 's' },
                                { v: r.sapQtde, t: 'n' },
                                { v: r.sapValor, t: 'n' },
                                { v: r.fisicoQtde, t: 'n' },
                                { v: r.fisicoValor, t: 'n' },
                                { v: r.admQtde, t: 'n' },
                                { v: r.admValor, t: 'n' },
                                { v: r.consumoQtde, t: 'n' },
                                { v: r.consumoValor, t: 'n' },
                                { v: r.entradaQtde, t: 'n' },
                                { v: r.entradaValor, t: 'n' },
                                { v: r.tipoDoCentro, t: 's' },
                                { v: r.dataLanc, t: 'd' },
                                { v: r.materialBloqueado, t: 's' },
                                { v: r.materialSubstituto, t: 's' },

                            ]
                            i++;
                        });

                        break;
                    }

                case 'porResumo':
                    {
                        dataRst[0] = [
                            { v: 'Tipo do Centro', t: 's' },
                            { v: 'Estoque Sap', t: 's' },
                            { v: 'Estoque Físico', t: 's' },
                            { v: 'Administativo', t: 's' },
                            { v: 'Consumo', t: 's' },
                            { v: 'Entrada', t: 's' },
                            { v: 'Data da Informação', t: 's' },



                        ];

                        result.forEach(function (r) {

                            dataRst[i] = [
                                { v: r.tipoDoCentro, t: 's' },
                                { v: r.sapValor, t: 'n' },
                                { v: r.fisicoValor, t: 'n' },
                                { v: r.admValor, t: 'n' },
                                { v: r.consumoValor, t: 'n' },
                                { v: r.entradaValor, t: 'n' },
                                { v: r.dataLanc, t: 'd' },

                            ]
                            i++;
                        });

                        break;
                    }
                default:
                    {
                        dataRst[0] = [
                            { v: 'Empresa', t: 's' },
                            { v: 'Material', t: 's' },
                            { v: 'Descrição do Material', t: 's' },
                            { v: 'Unidade de Medida', t: 's' },
                            { v: 'Classe', t: 's' },
                            { v: 'classificacao', t: 's' },
                            { v: 'Família', t: 's' },
                            { v: 'MG Code', t: 's' },
                            { v: 'Descricao do MG Code', t: 's' },
                            { v: 'Gestor', t: 's' },
                            { v: 'Estoque Sap Qtde', t: 's' },
                            { v: 'Estoque Sap Valor', t: 's' },
                            { v: 'Estoque Físico Qtde', t: 's' },
                            { v: 'Estoque Físico Valor', t: 's' },
                            { v: 'Adm Qtde', t: 's' },
                            { v: 'Adm Valor', t: 's' },
                            { v: 'Consumo Qtde', t: 's' },
                            { v: 'Consumo Valor', t: 's' },
                            { v: 'Entrada Qtde', t: 's' },
                            { v: 'Entrada Valor', t: 's' },

                            { v: 'Data da Informação', t: 's' },

                            { v: 'Material Bloqueado', t: 's' },
                            { v: 'Material Substituido', t: 's' },


                        ];

                        result.forEach(function (r) {

                            dataRst[i] = [
                                { v: r.empresaNome, t: 's' },
                                { v: r.materialCodSap, t: 's' },
                                { v: r.materialDescricao, t: 's' },
                                { v: r.materialUM, t: 's' },
                                { v: r.materialClasse, t: 's' },
                                { v: r.classificacaoNome, t: 's' },
                                { v: r.familiaNome, t: 's' },
                                { v: r.mGCodeCodigoSap, t: 's' },
                                { v: r.mGCodeDescricao, t: 's' },
                                { v: r.userName, t: 's' },
                                { v: r.sapQtde, t: 'n' },
                                { v: r.sapValor, t: 'n' },
                                { v: r.fisicoQtde, t: 'n' },
                                { v: r.fisicoValor, t: 'n' },
                                { v: r.admQtde, t: 'n' },
                                { v: r.admValor, t: 'n' },
                                { v: r.consumoQtde, t: 'n' },
                                { v: r.consumoValor, t: 'n' },
                                { v: r.entradaQtde, t: 'n' },
                                { v: r.entradaValor, t: 'n' },

                                { v: r.dataLanc, t: 'd' },
                                { v: r.materialBloqueado, t: 's' },
                                { v: r.materialSubstituto, t: 's' },

                            ]
                            i++;
                        });

                        break;
                    }



            }

            var table = $('#tabelaEstoqueConsumo').tableExport();
            table.export2file(dataRst, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'Extrato_EstoqueConsumo', '.xlsx')
            var botao = $('#btn_exporta')[0]
            var imagem = $('#imagemLoad')[0]
            imagem.style.display = "none"
            botao.style.visibility = "visible"

        }







        $(document).ready(function () {
             brazil = @User.IsInRole(RoleName.Brazil).ToString().ToLower()

            CarregaCabecalho();


            $('.demo-default').on("change", function () {
                CarregaCabecalho()

            });

            $('.radio').on('change', function () {
                tipoRetorno = $('input[name=listagem]:checked')[0].defaultValue

                criaTabela();

            });

            $('.checkbox').on('change', function () {
                tipoRetorno = $('input[name=listagem]:checked')[0].defaultValue

                criaTabela();

            });

            $('#btn_exporta').on('click', function () {
                var botao = $('#btn_exporta')[0]
                var imagem = $('#imagemLoad')[0]
                imagem.style.display = ""
                botao.style.visibility = 'hidden'

                $.ajax({
                    type: 'GET',
                    data: {

                        dto,
                        tipoC: tipoRetorno,


                    },
                    url: '/api/EstoqueConsumoAtuais/ListaEstoqueConsumo',
                    dataSrc: "",
                    success: function (d) {

                        ExportaPagina(d);


                    }

                })

            });

        });
    </script>
}
